01. Data Definition

CREATE TABLE Flights
(
	FlightID INT PRIMARY KEY,
	DepartureTime DATETIME NOT NULL,
	ArrivalTime DATETIME NOT NULL,
	[Status] VARCHAR(9) 
	CHECK ([Status] IN ('Departing', 'Delayed', 'Arrived', 'Cancelled')), 
	OriginAirportID INT FOREIGN KEY REFERENCES Airports(AirportID),
	DestinationAirportID INT FOREIGN KEY REFERENCES Airports(AirportID),
	AirlineID INT FOREIGN KEY REFERENCES Airlines(AirlineID)
)

CREATE TABLE Tickets
(
	TicketID INT PRIMARY KEY,
	Price DECIMAL(8,2) NOT NULL,
	Class VARCHAR(6) CHECK(Class IN ('First', 'Second', 'Third')),
	Seat VARCHAR(5) NOT NULL,
	CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID),
	FlightID INT FOREIGN KEY REFERENCES Flights(FlightID)
)

Section 2 ----
Task 1 Data Insertion

INSERT INTO Flights (FlightID, DepartureTime, ArrivalTime, [Status],	
	OriginAirportID, DestinationAirportID, AirlineID)
VALUES
(1,  '2016-10-13 06:00 AM',	'2016-10-13 10:00 AM', 'Delayed',	1, 4, 1),
(2,  '2016-10-12 12:00 PM',	'2016-10-12 12:01 PM', 'Departing', 1, 3, 2),
(3,  '2016-10-14 03:00 PM',	'2016-10-20 04:00 AM', 'Delayed',	4, 2, 4),
(4,  '2016-10-12 01:24 PM',	'2016-10-12 4:31 PM', 'Departing',	3, 1, 3),
(5,  '2016-10-12 08:11 AM',	'2016-10-12 11:22 PM', 'Departing',	4, 1, 1),
(6,  '1995-06-21 12:30 PM',	'1995-06-22 08:30 PM', 'Arrived',	2, 3, 5),
(7,  '2016-10-12 11:34 PM',	'2016-10-13 03:00 AM', 'Departing',	2, 4, 2),
(8,  '2016-11-11 01:00 PM',	'2016-11-12 10:00 PM', 'Delayed',	4, 3, 1),
(9,  '2015-10-01 12:00 PM',	'2015-12-01 01:00 AM', 'Arrived',	1, 2, 1),
(10, '2016-10-12 07:30 PM',	'2016-10-13 12:30 PM', 'Departing', 2, 1, 7)

INSERT INTO Tickets (TicketID, Price, Class, Seat, CustomerID, FlightID)
VALUES
(1,	3000.00,'First','233-A', 3,	8),
(2,	1799.90,'Second','123-D', 1, 1),
(3,	1200.50,'Second','12-Z', 2,	5),
(4,	410.68, 'Third','45-Q',	2, 8),
(5,	560.00, 'Third','201-R', 4,	6),
(6,	2100.00,'Second','13-T', 1,	9),
(7,	5500.00,'First','98-O',	2, 7)

Task 2 Update Arrived Flights -----

UPDATE Flights
SET AirlineID = 1
WHERE [Status] = 'Arrived'

Task 3 Update Tickets -----

UPDATE Tickets
SET Price *= 1.5 
WHERE FlightID IN
(SELECT FlightID FROM Flights 
WHERE AirlineID = 
	(SELECT TOP 1 AirlineID FROM Airlines
		ORDER BY Rating DESC))
		
TASK 4 Table Creation -----

CREATE TABLE CustomerReviews
(
	ReviewID INT PRIMARY KEY,
	ReviewContent VARCHAR(255) NOT NULL,
	ReviewGrade INT CHECK (ReviewGrade IN (0, 10)),
	AirlineID INT FOREIGN KEY REFERENCES Airlines(AirlineID),
	CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID)
)

CREATE TABLE CustomerBankAccounts
(
	AccountID INT PRIMARY KEY,
	AccountNumber VARCHAR(10) NOT NULL UNIQUE,
	Balance DECIMAL(10, 2) NOT NULL,
	CustomerID INT FOREIGN KEY REFERENCES Customers(CustomerID)
)

Task 5 Fill the new Tables with Data -----

INSERT INTO CustomerReviews (ReviewID, ReviewContent, ReviewGrade, 
	AirlineID, CustomerID)
VALUES 
(1,	'Me is very happy. Me likey this airline. Me good.', 10, 1, 1),
(2,	'Ja, Ja, Ja... Ja, Gut, Gut, Ja Gut! Sehr Gut!', 10, 1, 4),
(3,	'Meh...', 5, 4,	3),
(4,	'Well Ive seen better, but Ive certainly seen a lot worse...', 7, 3, 5)

INSERT INTO CustomerBankAccounts (AccountID, AccountNumber, 
	Balance, CustomerID)
VALUES
(1,	'123456790', 2569.23, 1),
(2,	'18ABC23672', 14004568.23, 2),
(3,	'F0RG0100N3', 19345.20,	5)


Section 3 Quering -----

Task 1: Extract All Tickets -----

SELECT TicketID, Price, Class, Seat FROM Tickets
ORDER BY TicketID 

Task 2: Extract All Customers -----

SELECT 
	CustomerID, CONCAT(FirstName, ' ', LastName) AS FullName, Gender 
FROM Customers
ORDER BY FullName, CustomerID

Task 3: Extract Delayed Flights -----

SELECT 
	FlightID, DepartureTime, ArrivalTime 
FROM Flights
WHERE [Status] = 'Delayed'
ORDER BY FlightID

Task 4: Extract Top 5 Most Highly Rated Airlines which have any Flights -----

SELECT DISTINCT TOP 5
	a.AirlineID, a.AirlineName, a.Nationality, a.Rating
FROM Airlines AS a
JOIN Flights AS f
	ON a.AirlineID = f.AirlineID
WHERE f.Status IS NOT NULL
ORDER BY Rating DESC, AirlineID

Task 5: Extract all Tickets with price below 5000, for First Class -----

SELECT 
	t.TicketID, ai.AirportName AS Destination, 
	CONCAT(c.FirstName, ' ', c.LastName) AS CustomerName
FROM Tickets AS t
JOIN Customers AS c
	ON c.CustomerID = t.CustomerID
JOIN Flights AS f
	ON f.FlightID = t.FlightID
JOIN Airports AS ai
	ON f.DestinationAirportID = ai.AirportID
WHERE Price < 5000 AND Class = 'First'
ORDER BY t.TicketID 

Task 6: Extract all Customers which are departing from their Home Town -----

SELECT DISTINCT
	c.CustomerID, 
	CONCAT(c.FirstName, ' ', c.LastName) AS FullName,
	tw.TownName AS HomeTown
FROM Flights AS f
JOIN Tickets AS t
	ON t.FlightID = f.FlightID
JOIN Customers AS c
	ON c.CustomerID = t.CustomerID
JOIN Towns AS tw
	ON tw.TownID = c.HomeTownID
JOIN Airports AS a
	ON a.AirportID = f.OriginAirportID
WHERE c.HomeTownID = a.TownID
ORDER BY c.CustomerID









