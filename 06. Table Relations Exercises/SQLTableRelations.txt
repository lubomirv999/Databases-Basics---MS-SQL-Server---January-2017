TASK 1

CREATE TABLE Passports
(
	PassportID INT NOT NULL,
	PassportNumber VARCHAR(50)
)

CREATE TABLE Persons
(
	PersonID INT NOT NULL,
	FirstName VARCHAR(50),
	Salary DECIMAL(10, 2),
	PassportID INT
)

INSERT INTO Passports(PassportID, PassportNumber)
VALUES 
(101, 'N34FG21B'),
(102, 'K65LO4R7'), 
(103, 'ZE657QP2')

INSERT INTO Persons(PersonID, FirstName, Salary, PassportID)
VALUES 
(1, 'Roberto', 43300.00, 102), 
(2, 'Tom', 56100.00, 103), 
(3, 'Yana', 60200.00, 101)

ALTER TABLE Persons
ADD CONSTRAINT PK_Students PRIMARY KEY (PersonID)

ALTER TABLE Passports
ADD CONSTRAINT PK_Passports PRIMARY KEY (PassportID)

ALTER TABLE Persons
ADD CONSTRAINT FK_Persons_Passports FOREIGN KEY (PassportID) REFERENCES Passports(PassportID)

-------------------
TASK 2

CREATE TABLE Models
(
	ModelID INT NOT NULL,
	Name VARCHAR(50),
	ManufacturerID INT	
)

CREATE TABLE Manufacturers
(
	ManufacturerID INT NOT NULL,
	Name VARCHAR(50),
	EstablishedOn DATE	
)

INSERT INTO Models
VALUES
(101, 'X1', 1),
(102, 'i6', 1),
(103, 'Model S', 2),
(104, 'Model X', 2),
(105, 'Model 3', 2),
(106, 'Nova', 3)

INSERT INTO Manufacturers
VALUES
(1, 'BMW', '07/03/1916'),
(2, 'Tesla', '01/01/2003'),
(3, 'Lada', '01/05/1966')

ALTER TABLE Models
ADD CONSTRAINT PK_Models PRIMARY KEY (ModelID)

ALTER TABLE Manufacturers
ADD CONSTRAINT PK_Manufacturers PRIMARY KEY (ManufacturerID)

ALTER TABLE Models
ADD CONSTRAINT FK_Models_Manufacturers FOREIGN KEY (ManufacturerID) 
REFERENCES Manufacturers(ManufacturerID)


--------------
TASK 3

CREATE TABLE Students(
	StudentID INT NOT NULL,
	[Name] NVARCHAR(50)
)

INSERT INTO Students(StudentID, [Name])
VALUES 
(1, 'Mila'), 
(2, 'Toni'), 
(3, 'Ron')

CREATE TABLE Exams(
	ExamID INT NOT NULL,
	[Name] NVARCHAR(50)
)

INSERT INTO Exams(ExamID, [Name])
VALUES 
(101, 'Spring MVC'), 
(102, 'Neo4j'), 
(103, 'Oracle 11g')

CREATE TABLE StudentsExams(
	StudentID INT NOT NULL,
	ExamID INT NOT NULL
)

INSERT INTO StudentsExams(StudentID, ExamID)
VALUES 
(1, 101), 
(1, 102), 
(2, 101), 
(3, 103), 
(2, 102), 
(2, 103)

ALTER TABLE Students
ADD PRIMARY KEY(StudentID)

ALTER TABLE Exams
ADD PRIMARY KEY(ExamID)

ALTER TABLE StudentsExams
ADD PRIMARY KEY(StudentID, ExamID)

ALTER TABLE StudentsExams
ADD CONSTRAINT FK_Students_StudentsExams FOREIGN KEY(StudentID)
REFERENCES Students(StudentID)

ALTER TABLE StudentsExams
ADD CONSTRAINT FK_Exams_StudentsExams FOREIGN KEY(ExamID)
REFERENCES Exams(ExamID)

-----------
TASK 4

CREATE TABLE Teachers
(
	TeacherID INT NOT NULL,
	Name NVARCHAR(50),
	ManagerID INT
)

INSERT INTO Teachers(TeacherID, Name, ManagerID)
VALUES
(101, 'John', NULL),
(102, 'Maya', 106),
(103, 'Silvia', 106),
(104, 'Ted', 105),
(105, 'Mark', 101),
(106, 'Greta', 101)

ALTER TABLE Teachers
ADD PRIMARY KEY (TeacherID)

ALTER TABLE Teachers
ADD CONSTRAINT FK_TeacherID_ManagerID FOREIGN KEY (ManagerID) 
REFERENCES Teachers(TeacherID)

------------
TASK 5

/* TABLES */
CREATE TABLE Cities
(
	CityID INT NOT NULL,
	Name VARCHAR(50)
)

/* Cities Tables Keys */
ALTER TABLE Cities
ADD PRIMARY KEY (CityID)
/* Cities Tables Keys */

CREATE TABLE Customers
(
	CustomerID INT NOT NULL,
	Name VARCHAR(50),
	Birthday DATE,
	CityID INT
)

/* Customers Tables Keys */
ALTER TABLE Customers
ADD PRIMARY KEY (CustomerID)

ALTER TABLE Customers
ADD CONSTRAINT FK_Customers_Cities FOREIGN KEY (CityID) 
REFERENCES Cities(CityID)
/* Customers Tables Keys */

CREATE TABLE Orders
(
	OrderID INT NOT NULL,
	CustomerID INT NOT NULL
)

/* Orders Tables Keys */
ALTER TABLE Orders
ADD PRIMARY KEY (OrderID)

ALTER TABLE Orders
ADD CONSTRAINT FK_Orders_Customers FOREIGN KEY (CustomerID)
REFERENCES Customers(CustomerID)
/* Orders Tables Keys */

CREATE TABLE Items
(
	ItemID INT NOT NULL,
	Name VARCHAR(50),
	ItemTypeID INT
)

/* Items Tables Keys */
ALTER TABLE Items
ADD PRIMARY KEY (ItemID)

CREATE TABLE OrderItems
(
	OrderID INT NOT NULL,
	ItemID INT NOT NULL
)

/* OrderItems Tables Keys */
ALTER TABLE OrderItems
ADD PRIMARY KEY (OrderID, ItemID)

ALTER TABLE OrderItems
ADD CONSTRAINT FK_Orders_OrderItems FOREIGN KEY(OrderID)
REFERENCES Orders(OrderID)

ALTER TABLE OrderItems
ADD CONSTRAINT FK_Items_OrderItems FOREIGN KEY(ItemID)
REFERENCES Items(ItemID)
/* OrderItems Tables Keys */

CREATE TABLE ItemTypes
(
	ItemTypeID INT NOT NULL,
	Name VARCHAR(50)
)

/* ItemTypes Tables Keys */
ALTER TABLE ItemTypes
ADD PRIMARY KEY (ItemTypeID)
/* ItemTypes Tables Keys */

ALTER TABLE Items 
ADD CONSTRAINT FK_Items_ItemTypes FOREIGN KEY (ItemTypeID) 
REFERENCES ItemTypes(ItemTypeID)
/* Items Tables Keys */
/* TABLES */

------------
TASK 6

/* Subjects Table*/
CREATE TABLE Subjects
(
	SubjectID INT NOT NULL,
	SubjectName VARCHAR(50)
)

ALTER TABLE Subjects
ADD PRIMARY KEY (SubjectID)
/* Subjects Table*/

/* Agenda Table*/
CREATE TABLE Agenda
(
	StudentID INT NOT NULL,
	SubjectID INT NOT NULL
)

ALTER TABLE Agenda
ADD PRIMARY KEY (StudentID, SubjectID)
/* Agenda Table*/

/* Students Table*/
CREATE TABLE Students(
	StudentID INT NOT NULL,
	StudentNumber INT,
	StudentName VARCHAR(50),
	MajorID INT
)

ALTER TABLE Students
ADD PRIMARY KEY (StudentID)
/* Students Table*/

/* Agenda FK */
ALTER TABLE Agenda
ADD CONSTRAINT FK_Subjects_Agenda FOREIGN KEY(SubjectID)
REFERENCES Subjects(SubjectID)

ALTER TABLE Agenda
ADD CONSTRAINT FK_Students_Agenda FOREIGN KEY(StudentID)
REFERENCES Students(StudentID)
/* Agenda FK */

/* Majors Table*/
CREATE TABLE Majors
(
	MajorID INT NOT NULL,
	Name VARCHAR(50)
)

ALTER TABLE Majors
ADD PRIMARY KEY (MajorID)
/* Majors Table*/

/* Students FK */
ALTER TABLE Students
ADD CONSTRAINT FK_Students_Majors FOREIGN KEY (MajorID)
REFERENCES Majors(MajorID)
/* Students FK */

/* Payments Table*/
CREATE TABLE Payments(
	PaymentID INT NOT NULL,
	PaymentDate DATE,
	PaymentAmount DECIMAL(20, 2),
	StudentID INT
)

ALTER TABLE Payments
ADD PRIMARY KEY (PaymentID)

ALTER TABLE Payments
ADD CONSTRAINT FK_Payments_Students FOREIGN KEY (StudentID)
REFERENCES Students(StudentID)
/* Payments Table*/

------------
TASK 9

SELECT
	m.MountainRange,
	P.PeakName,
	p.Elevation
FROM Mountains AS m
JOIN Peaks AS p
ON p.MountainId = m.Id
WHERE m.MountainRange = 'Rila'
ORDER BY p.Elevation DESC